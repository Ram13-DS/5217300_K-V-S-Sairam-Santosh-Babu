#include <stdio.h>


#define MOD 1000000007
#define MAX 1001

long long rw[MAX];
long long tw[MAX];
long long sw[MAX];

long long power(long long a, int b) {
    long long res = 1;
    while (b) {
        if (b % 2) res = (res * a) % MOD;
        a = (a * a) % MOD;
        b /= 2;
    }
    return res;
}

void precompute() {
    rw[0] = 1;
    for (int i = 1; i < MAX; i++) {
        rw[i] = 0;
        if (i >= 1) rw[i] = (rw[i] + rw[i - 1]) % MOD;
        if (i >= 2) rw[i] = (rw[i] + rw[i - 2]) % MOD;
        if (i >= 3) rw[i] = (rw[i] + rw[i - 3]) % MOD;
        if (i >= 4) rw[i] = (rw[i] + rw[i - 4]) % MOD;
    }
}

int main() {
    precompute();
    int t;
    scanf("%d", &t);
    while (t--) {
        int n, m;
        scanf("%d %d", &n, &m);

        for (int i = 1; i <= m; i++) {
            tw[i] = power(rw[i], n);
        }

        sw[1] = tw[1];
        for (int i = 2; i <= m; i++) {
            sw[i] = tw[i];
            for (int j = 1; j < i; j++) {
                sw[i] = (sw[i] - (sw[j] * tw[i - j]) % MOD + MOD) % MOD;
            }
        }

        printf("%lld\n", sw[m]);
    }
    return 0;
}
