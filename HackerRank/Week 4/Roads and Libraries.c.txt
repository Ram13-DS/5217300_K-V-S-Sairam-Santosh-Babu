#include <stdio.h>

#define N    100000

int dsu[N];

int find(int i) {
    return dsu[i] < 0 ? i : (dsu[i] = find(dsu[i]));
}

void join(int i, int j) {
    i = find(i);
    j = find(j);
    if (i == j)
        return;
    if (dsu[i] <= dsu[j]) {
        dsu[i] += dsu[j];
        dsu[j] = i;
    } else {
        dsu[j] += dsu[i];
        dsu[i] = j;
    }
}

int main() {
    int q;

    scanf("%d", &q);
    while (q-- > 0) {
        long long cost;
        int n, m, cr, cl, i, j;

        scanf("%d%d%d%d", &n, &m, &cl, &cr);
        for (i = 0; i < n; i++)
            dsu[i] = -1;
        while (m-- > 0) {
            scanf("%d%d", &i, &j);
            i--, j--;
            join(i, j);
        }
        cost = 0;
        for (i = 0; i < n; i++) {
            int r = find(i);

            if (i == r) {
                int cnt = -dsu[i];

                cost += (long long) (cnt - 1) * cr + cl;
            }
        }
        printf("%lld\n", cost < (long long) cl * n ? cost : (long long) cl * n);
    }
    return 0;
}