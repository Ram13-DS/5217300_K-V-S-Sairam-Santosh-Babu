#include <stdio.h>
#include <string.h>

#define MAX 1000

char stack[MAX];
int top = -1;

void push(char c) {
    stack[++top] = c;
}

char pop() {
    return stack[top--];
}

int isEmpty() {
    return top == -1;
}

int matches(char open, char close) {
    if (open == '(' && close == ')') return 1;
    if (open == '[' && close == ']') return 1;
    if (open == '{' && close == '}') return 1;
    return 0;
}

char* isBalanced(char* s) {
    top = -1; // reset stack

    for (int i = 0; i < strlen(s); i++) {
        char c = s[i];
        if (c == '(' || c == '[' || c == '{') {
            push(c);
        } else {
            if (isEmpty()) return "NO";
            char open = pop();
            if (!matches(open, c)) return "NO";
        }
    }
    return isEmpty() ? "YES" : "NO";
}

int main() {
    int n;
    scanf("%d", &n);
    char s[MAX+1];

    for (int i = 0; i < n; i++) {
        scanf("%s", s);
        printf("%s\n", isBalanced(s));
    }
    return 0;
}
